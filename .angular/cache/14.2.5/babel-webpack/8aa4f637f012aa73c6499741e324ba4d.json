{"ast":null,"code":"import { BehaviorSubject, combineLatest, filter, fromEvent, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction AppComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r4.name);\n  }\n}\n\nfunction AppComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r5, \" \");\n  }\n}\n\nfunction AppComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AppComponent_div_2_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵtemplate(2, AppComponent_div_2_div_2_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r1.users);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r1.filteredUsers);\n  }\n}\n\nexport class AppComponent {\n  constructor() {\n    this.title = 'Blog-UI-App';\n    this.users = [{\n      id: 1,\n      name: 'jhon',\n      isActive: true\n    }, {\n      id: 2,\n      name: 'jack',\n      isActive: true\n    }, {\n      id: 1,\n      name: 'mike',\n      isActive: true\n    }];\n    this.users$ = of(this.users);\n    this.username$ = this.users$.pipe(map(users => users.map(user => user.name))); //this data will not be there any of its content is false\n\n    this.filteredUsers$ = this.users$.pipe(filter(users => users.every(user => user.isActive)), map(users => users.map(user => user.name))); //behaviour subject\n\n    this.user$ = new BehaviorSubject(null); //from \n\n    this.documentClick$ = fromEvent(document, 'click'); //rxjs combine latest\n\n    this.data$ = combineLatest([this.users$, this.filteredUsers$]).pipe(map(([users, filteredUsers]) => ({\n      users,\n      filteredUsers\n    })));\n  }\n\n  ngOnInit() {// this should not used if you have observable\n    // this.user$.subscribe(users=>{\n    //   console.log(\"users\",users);      \n    // })\n    // setTimeout(()=>{\n    //   this.user$.next({id:'1',name:'shivraj'})\n    // },2000)\n    // this.user$.subscribe((data)=>{\n    //   console.log(\"user\",data);\n    // })\n    //from \n    // this.documentClick$.subscribe(e=>{\n    //   console.log('e',e);\n    // })\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[2, \"text-align\", \"center\", \"color\", \"red\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"SHIVRAJ\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AppComponent_div_2_Template, 3, 2, \"div\", 1);\n      i0.ɵɵpipe(3, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.data$));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAT,EAA0BC,aAA1B,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4DC,GAA5D,EAAiEC,EAAjE,QAA2E,MAA3E;;;;;;IC6BEC;IAAqCA;IAAeA;;;;;IAAfA;IAAAA;;;;;;IAErCA;IACEA;IACFA;;;;;IADEA;IAAAA;;;;;;IAJJA;IACEA;IAEAA;IAGFA;;;;;IALwBA;IAAAA;IAEAA;IAAAA;;;;ADxBxB,OAAM,MAAOC,YAAP,CAAmB;EALzBC;IAOE,aAAQ,aAAR;IAEA,aAAQ,CAEN;MAACC,EAAE,EAAC,CAAJ;MAAQC,IAAI,EAAC,MAAb;MAAqBC,QAAQ,EAAC;IAA9B,CAFM,EAGN;MAACF,EAAE,EAAC,CAAJ;MAAQC,IAAI,EAAC,MAAb;MAAqBC,QAAQ,EAAC;IAA9B,CAHM,EAIN;MAACF,EAAE,EAAC,CAAJ;MAAQC,IAAI,EAAC,MAAb;MAAqBC,QAAQ,EAAC;IAA9B,CAJM,CAAR;IAQA,cAASN,EAAE,CAAC,KAAKO,KAAN,CAAX;IAEA,iBAAY,KAAKC,MAAL,CAAYC,IAAZ,CAAiBV,GAAG,CAAEQ,KAAD,IAASA,KAAK,CAACR,GAAN,CAAWW,IAAD,IAAQA,IAAI,CAACL,IAAvB,CAAV,CAApB,CAAZ,CAnBF,CAqBA;;IACE,sBAAiB,KAAKG,MAAL,CAAYC,IAAZ,CAAiBZ,MAAM,CAACU,KAAK,IAAGA,KAAK,CAACI,KAAN,CAAaD,IAAD,IAAQA,IAAI,CAACJ,QAAzB,CAAT,CAAvB,EAAoEP,GAAG,CAAEQ,KAAD,IAASA,KAAK,CAACR,GAAN,CAAWW,IAAD,IAAQA,IAAI,CAACL,IAAvB,CAAV,CAAvE,CAAjB,CAtBF,CAyBE;;IAEF,aAAQ,IAAIV,eAAJ,CAAwD,IAAxD,CAAR,CA3BA,CA8BA;;IACA,sBAAiBG,SAAS,CAACc,QAAD,EAAU,OAAV,CAA1B,CA/BA,CAiCA;;IACA,aAAQhB,aAAa,CAAC,CACpB,KAAKY,MADe,EAEpB,KAAKK,cAFe,CAAD,CAAb,CAGLJ,IAHK,CAINV,GAAG,CAAC,CAAC,CAACQ,KAAD,EAAOO,aAAP,CAAD,MAA2B;MAC7BP,KAD6B;MAE7BO;IAF6B,CAA3B,CAAD,CAJG,CAAR;EAqCC;;EA1BCC,QAAQ,IAEN;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IAEA;IAEA;IACA;IACA;IAEA;EAED;;AA9DsB;;;mBAAZb;AAAY;;;QAAZA;EAAYc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBnB;MAA2CA;MAAOA;MA6BlDA;;;;;MAAMA;MAAAA","names":["BehaviorSubject","combineLatest","filter","fromEvent","map","of","i0","AppComponent","constructor","id","name","isActive","users","users$","pipe","user","every","document","filteredUsers$","filteredUsers","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\new workspace\\angular projects\\Blog-UI-App\\src\\app\\app.component.ts","D:\\new workspace\\angular projects\\Blog-UI-App\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, combineLatest, filter, fromEvent, map, of } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'Blog-UI-App';\n\n  users = [\n\n    {id:1 , name:'jhon', isActive:true},\n    {id:2 , name:'jack', isActive:true},\n    {id:1 , name:'mike', isActive:true},\n  ];\n\n \n  users$ = of(this.users);\n\n  username$ = this.users$.pipe(map((users)=>users.map((user)=>user.name)));\n\n//this data will not be there any of its content is false\n  filteredUsers$ = this.users$.pipe(filter(users=> users.every((user)=>user.isActive)),map((users)=>users.map((user)=>user.name)))\n\n\n  //behaviour subject\n\nuser$ = new BehaviorSubject<{id: string ; name: string} | null>(null);\n\n\n//from \ndocumentClick$ = fromEvent(document,'click');\n\n//rxjs combine latest\ndata$ = combineLatest([\n  this.users$,\n  this.filteredUsers$\n]).pipe(\n  map(([users,filteredUsers])=>( {\n    users,\n    filteredUsers\n  }))\n  );\n\n\n  ngOnInit(): void {\n\n    // this should not used if you have observable\n    // this.user$.subscribe(users=>{\n    //   console.log(\"users\",users);      \n    // })\n\n    // setTimeout(()=>{\n    //   this.user$.next({id:'1',name:'shivraj'})\n    // },2000)\n\n    // this.user$.subscribe((data)=>{\n    //   console.log(\"user\",data);\n      \n    // })\n\n    //from \n    // this.documentClick$.subscribe(e=>{\n    //   console.log('e',e);\n      \n    // })\n    \n  }\n\n  \n\n}\n","<h1 style=\"text-align: center; color: red\">SHIVRAJ</h1>\r\n\r\n<!-- <div *ngFor=\"let user of $users | async\">{{ user.name }}</div> -->\r\n\r\n<!-- <div *ngFor=\"let item of users$ | async\">\r\n  {{ item.name }}\r\n</div> -->\r\n\r\n<!-- <div *ngFor=\"let username of username$ | async\">\r\n  {{ username }}\r\n</div> -->\r\n\r\n<!-- <div *ngFor=\"let user of filteredUsers$ | async\">\r\n  {{ user }}\r\n</div> -->\r\n\r\n<!-- behaviour subject -->\r\n\r\n<!-- not good way of writing code -->\r\n<!-- <div *ngIf=\"user$ | async\">\r\n  {{ (user$ | async)?.name }}\r\n</div> -->\r\n\r\n<!-- <div *ngIf=\"user$ | async as user\">\r\n  {{ user.name }}\r\n</div> -->\r\n\r\n<!-- combine latest -->\r\n\r\n<div *ngIf=\"data$ | async as data\">\r\n  <div *ngFor=\"let user of data.users\">{{ user.name }}</div>\r\n\r\n  <div *ngFor=\"let user of data.filteredUsers\">\r\n    {{ user }}\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}